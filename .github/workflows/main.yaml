name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.python-version }}-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v3.2.0
      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - uses: actions/cache@v3.2.2 # cache environment for faster test execution
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: | # install package and test requirements as well as package
          python -m pip install -r dev-requirements.txt
          python -m pip install --no-deps -e .
          python -m pip list
      - name: Running Tests # run tests (includes mypy checks and coverage export)
        run: |
          python -m pytest
      - name: Upload coverage to Codecov # this automatically hooks up to Codecov
        uses: codecov/codecov-action@v3.1.1
        if: ${{ matrix.python-version }} == 3.9
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  # docker:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: flase
  #     matrix:
  #       image:
  #         - python-notebook
  #         - R-notebook
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Docker meta
  #       id: docker_meta
  #       uses: crazy-max/ghaction-docker-meta@v2.3.0
  #       with:
  #         images: |
  #           carbonplan/forests-${{matrix.image}}
  #         tag-sha: true
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: envs/${{matrix.image}}
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.docker_meta.outputs.tags }}
  #         labels: ${{ steps.docker_meta.outputs.labels }}
